/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package de.uhh.l2g.plugins.migration.model;

import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.model.BaseModel;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;

import java.io.Serializable;

/**
 * The base model interface for the LegacyHost service. Represents a row in the &quot;host&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation {@link de.uhh.l2g.plugins.migration.model.impl.LegacyHostModelImpl} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link de.uhh.l2g.plugins.migration.model.impl.LegacyHostImpl}.
 * </p>
 *
 * @author unihh
 * @see LegacyHost
 * @see de.uhh.l2g.plugins.migration.model.impl.LegacyHostImpl
 * @see de.uhh.l2g.plugins.migration.model.impl.LegacyHostModelImpl
 * @generated
 */
public interface LegacyHostModel extends BaseModel<LegacyHost> {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a legacy host model instance should use the {@link LegacyHost} interface instead.
	 */

	/**
	 * Returns the primary key of this legacy host.
	 *
	 * @return the primary key of this legacy host
	 */
	public long getPrimaryKey();

	/**
	 * Sets the primary key of this legacy host.
	 *
	 * @param primaryKey the primary key of this legacy host
	 */
	public void setPrimaryKey(long primaryKey);

	/**
	 * Returns the ID of this legacy host.
	 *
	 * @return the ID of this legacy host
	 */
	public long getId();

	/**
	 * Sets the ID of this legacy host.
	 *
	 * @param id the ID of this legacy host
	 */
	public void setId(long id);

	/**
	 * Returns the protokoll of this legacy host.
	 *
	 * @return the protokoll of this legacy host
	 */
	@AutoEscape
	public String getProtokoll();

	/**
	 * Sets the protokoll of this legacy host.
	 *
	 * @param protokoll the protokoll of this legacy host
	 */
	public void setProtokoll(String protokoll);

	/**
	 * Returns the streamer of this legacy host.
	 *
	 * @return the streamer of this legacy host
	 */
	@AutoEscape
	public String getStreamer();

	/**
	 * Sets the streamer of this legacy host.
	 *
	 * @param streamer the streamer of this legacy host
	 */
	public void setStreamer(String streamer);

	/**
	 * Returns the port of this legacy host.
	 *
	 * @return the port of this legacy host
	 */
	public int getPort();

	/**
	 * Sets the port of this legacy host.
	 *
	 * @param port the port of this legacy host
	 */
	public void setPort(int port);

	/**
	 * Returns the server root of this legacy host.
	 *
	 * @return the server root of this legacy host
	 */
	@AutoEscape
	public String getServerRoot();

	/**
	 * Sets the server root of this legacy host.
	 *
	 * @param serverRoot the server root of this legacy host
	 */
	public void setServerRoot(String serverRoot);

	/**
	 * Returns the name of this legacy host.
	 *
	 * @return the name of this legacy host
	 */
	@AutoEscape
	public String getName();

	/**
	 * Sets the name of this legacy host.
	 *
	 * @param name the name of this legacy host
	 */
	public void setName(String name);

	@Override
	public boolean isNew();

	@Override
	public void setNew(boolean n);

	@Override
	public boolean isCachedModel();

	@Override
	public void setCachedModel(boolean cachedModel);

	@Override
	public boolean isEscapedModel();

	@Override
	public Serializable getPrimaryKeyObj();

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj);

	@Override
	public ExpandoBridge getExpandoBridge();

	@Override
	public void setExpandoBridgeAttributes(BaseModel<?> baseModel);

	@Override
	public void setExpandoBridgeAttributes(ExpandoBridge expandoBridge);

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext);

	@Override
	public Object clone();

	@Override
	public int compareTo(
		de.uhh.l2g.plugins.migration.model.LegacyHost legacyHost);

	@Override
	public int hashCode();

	@Override
	public CacheModel<de.uhh.l2g.plugins.migration.model.LegacyHost> toCacheModel();

	@Override
	public de.uhh.l2g.plugins.migration.model.LegacyHost toEscapedModel();

	@Override
	public de.uhh.l2g.plugins.migration.model.LegacyHost toUnescapedModel();

	@Override
	public String toString();

	@Override
	public String toXmlString();
}