/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package de.uhh.l2g.plugins.migration.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import de.uhh.l2g.plugins.migration.model.LegacyVideoFacility;
import de.uhh.l2g.plugins.migration.model.LegacyVideoFacilityModel;

import java.io.Serializable;

import java.sql.Types;

import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the LegacyVideoFacility service. Represents a row in the &quot;video_facility&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link de.uhh.l2g.plugins.migration.model.LegacyVideoFacilityModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link LegacyVideoFacilityImpl}.
 * </p>
 *
 * @author unihh
 * @see LegacyVideoFacilityImpl
 * @see de.uhh.l2g.plugins.migration.model.LegacyVideoFacility
 * @see de.uhh.l2g.plugins.migration.model.LegacyVideoFacilityModel
 * @generated
 */
public class LegacyVideoFacilityModelImpl extends BaseModelImpl<LegacyVideoFacility>
	implements LegacyVideoFacilityModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a legacy video facility model instance should use the {@link de.uhh.l2g.plugins.migration.model.LegacyVideoFacility} interface instead.
	 */
	public static final String TABLE_NAME = "video_facility";
	public static final Object[][] TABLE_COLUMNS = {
			{ "videoFacilityId", Types.BIGINT },
			{ "videoId", Types.BIGINT },
			{ "facilityId", Types.BIGINT }
		};
	public static final String TABLE_SQL_CREATE = "create table video_facility (videoFacilityId LONG not null primary key,videoId LONG,facilityId LONG)";
	public static final String TABLE_SQL_DROP = "drop table video_facility";
	public static final String ORDER_BY_JPQL = " ORDER BY legacyVideoFacility.videoFacilityId ASC";
	public static final String ORDER_BY_SQL = " ORDER BY video_facility.videoFacilityId ASC";
	public static final String DATA_SOURCE = "anotherDataSource";
	public static final String SESSION_FACTORY = "anotherSessionFactory";
	public static final String TX_MANAGER = "anotherTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.de.uhh.l2g.plugins.migration.model.LegacyVideoFacility"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.de.uhh.l2g.plugins.migration.model.LegacyVideoFacility"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = false;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.de.uhh.l2g.plugins.migration.model.LegacyVideoFacility"));

	public LegacyVideoFacilityModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _videoFacilityId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setVideoFacilityId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _videoFacilityId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return LegacyVideoFacility.class;
	}

	@Override
	public String getModelClassName() {
		return LegacyVideoFacility.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("videoFacilityId", getVideoFacilityId());
		attributes.put("videoId", getVideoId());
		attributes.put("facilityId", getFacilityId());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long videoFacilityId = (Long)attributes.get("videoFacilityId");

		if (videoFacilityId != null) {
			setVideoFacilityId(videoFacilityId);
		}

		Long videoId = (Long)attributes.get("videoId");

		if (videoId != null) {
			setVideoId(videoId);
		}

		Long facilityId = (Long)attributes.get("facilityId");

		if (facilityId != null) {
			setFacilityId(facilityId);
		}
	}

	@Override
	public long getVideoFacilityId() {
		return _videoFacilityId;
	}

	@Override
	public void setVideoFacilityId(long videoFacilityId) {
		_videoFacilityId = videoFacilityId;
	}

	@Override
	public long getVideoId() {
		return _videoId;
	}

	@Override
	public void setVideoId(long videoId) {
		_videoId = videoId;
	}

	@Override
	public long getFacilityId() {
		return _facilityId;
	}

	@Override
	public void setFacilityId(long facilityId) {
		_facilityId = facilityId;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(0,
			LegacyVideoFacility.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public LegacyVideoFacility toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (LegacyVideoFacility)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		LegacyVideoFacilityImpl legacyVideoFacilityImpl = new LegacyVideoFacilityImpl();

		legacyVideoFacilityImpl.setVideoFacilityId(getVideoFacilityId());
		legacyVideoFacilityImpl.setVideoId(getVideoId());
		legacyVideoFacilityImpl.setFacilityId(getFacilityId());

		legacyVideoFacilityImpl.resetOriginalValues();

		return legacyVideoFacilityImpl;
	}

	@Override
	public int compareTo(LegacyVideoFacility legacyVideoFacility) {
		long primaryKey = legacyVideoFacility.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof LegacyVideoFacility)) {
			return false;
		}

		LegacyVideoFacility legacyVideoFacility = (LegacyVideoFacility)obj;

		long primaryKey = legacyVideoFacility.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
	}

	@Override
	public CacheModel<LegacyVideoFacility> toCacheModel() {
		LegacyVideoFacilityCacheModel legacyVideoFacilityCacheModel = new LegacyVideoFacilityCacheModel();

		legacyVideoFacilityCacheModel.videoFacilityId = getVideoFacilityId();

		legacyVideoFacilityCacheModel.videoId = getVideoId();

		legacyVideoFacilityCacheModel.facilityId = getFacilityId();

		return legacyVideoFacilityCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(7);

		sb.append("{videoFacilityId=");
		sb.append(getVideoFacilityId());
		sb.append(", videoId=");
		sb.append(getVideoId());
		sb.append(", facilityId=");
		sb.append(getFacilityId());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(13);

		sb.append("<model><model-name>");
		sb.append("de.uhh.l2g.plugins.migration.model.LegacyVideoFacility");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>videoFacilityId</column-name><column-value><![CDATA[");
		sb.append(getVideoFacilityId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>videoId</column-name><column-value><![CDATA[");
		sb.append(getVideoId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>facilityId</column-name><column-value><![CDATA[");
		sb.append(getFacilityId());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = LegacyVideoFacility.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] {
			LegacyVideoFacility.class
		};
	private long _videoFacilityId;
	private long _videoId;
	private long _facilityId;
	private LegacyVideoFacility _escapedModel;
}