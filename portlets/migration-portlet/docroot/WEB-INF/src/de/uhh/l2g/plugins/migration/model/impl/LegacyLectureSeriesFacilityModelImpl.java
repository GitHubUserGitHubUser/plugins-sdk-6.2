/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package de.uhh.l2g.plugins.migration.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import de.uhh.l2g.plugins.migration.model.LegacyLectureSeriesFacility;
import de.uhh.l2g.plugins.migration.model.LegacyLectureSeriesFacilityModel;

import java.io.Serializable;

import java.sql.Types;

import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the LegacyLectureSeriesFacility service. Represents a row in the &quot;lectureseries_facility&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link de.uhh.l2g.plugins.migration.model.LegacyLectureSeriesFacilityModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link LegacyLectureSeriesFacilityImpl}.
 * </p>
 *
 * @author unihh
 * @see LegacyLectureSeriesFacilityImpl
 * @see de.uhh.l2g.plugins.migration.model.LegacyLectureSeriesFacility
 * @see de.uhh.l2g.plugins.migration.model.LegacyLectureSeriesFacilityModel
 * @generated
 */
public class LegacyLectureSeriesFacilityModelImpl extends BaseModelImpl<LegacyLectureSeriesFacility>
	implements LegacyLectureSeriesFacilityModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a legacy lecture series facility model instance should use the {@link de.uhh.l2g.plugins.migration.model.LegacyLectureSeriesFacility} interface instead.
	 */
	public static final String TABLE_NAME = "lectureseries_facility";
	public static final Object[][] TABLE_COLUMNS = {
			{ "lectureseriesFacilityId", Types.BIGINT },
			{ "facilityId", Types.BIGINT },
			{ "lectureseriesId", Types.BIGINT },
			{ "isLinkFrom", Types.BIGINT }
		};
	public static final String TABLE_SQL_CREATE = "create table lectureseries_facility (lectureseriesFacilityId LONG not null primary key,facilityId LONG,lectureseriesId LONG,isLinkFrom LONG)";
	public static final String TABLE_SQL_DROP = "drop table lectureseries_facility";
	public static final String ORDER_BY_JPQL = " ORDER BY legacyLectureSeriesFacility.lectureseriesFacilityId ASC";
	public static final String ORDER_BY_SQL = " ORDER BY lectureseries_facility.lectureseriesFacilityId ASC";
	public static final String DATA_SOURCE = "anotherDataSource";
	public static final String SESSION_FACTORY = "anotherSessionFactory";
	public static final String TX_MANAGER = "anotherTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.de.uhh.l2g.plugins.migration.model.LegacyLectureSeriesFacility"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.de.uhh.l2g.plugins.migration.model.LegacyLectureSeriesFacility"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.column.bitmask.enabled.de.uhh.l2g.plugins.migration.model.LegacyLectureSeriesFacility"),
			true);
	public static long FACILITYID_COLUMN_BITMASK = 1L;
	public static long LECTURESERIESID_COLUMN_BITMASK = 2L;
	public static long LECTURESERIESFACILITYID_COLUMN_BITMASK = 4L;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.de.uhh.l2g.plugins.migration.model.LegacyLectureSeriesFacility"));

	public LegacyLectureSeriesFacilityModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _lectureseriesFacilityId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setLectureseriesFacilityId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _lectureseriesFacilityId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return LegacyLectureSeriesFacility.class;
	}

	@Override
	public String getModelClassName() {
		return LegacyLectureSeriesFacility.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("lectureseriesFacilityId", getLectureseriesFacilityId());
		attributes.put("facilityId", getFacilityId());
		attributes.put("lectureseriesId", getLectureseriesId());
		attributes.put("isLinkFrom", getIsLinkFrom());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long lectureseriesFacilityId = (Long)attributes.get(
				"lectureseriesFacilityId");

		if (lectureseriesFacilityId != null) {
			setLectureseriesFacilityId(lectureseriesFacilityId);
		}

		Long facilityId = (Long)attributes.get("facilityId");

		if (facilityId != null) {
			setFacilityId(facilityId);
		}

		Long lectureseriesId = (Long)attributes.get("lectureseriesId");

		if (lectureseriesId != null) {
			setLectureseriesId(lectureseriesId);
		}

		Long isLinkFrom = (Long)attributes.get("isLinkFrom");

		if (isLinkFrom != null) {
			setIsLinkFrom(isLinkFrom);
		}
	}

	@Override
	public long getLectureseriesFacilityId() {
		return _lectureseriesFacilityId;
	}

	@Override
	public void setLectureseriesFacilityId(long lectureseriesFacilityId) {
		_lectureseriesFacilityId = lectureseriesFacilityId;
	}

	@Override
	public long getFacilityId() {
		return _facilityId;
	}

	@Override
	public void setFacilityId(long facilityId) {
		_columnBitmask |= FACILITYID_COLUMN_BITMASK;

		if (!_setOriginalFacilityId) {
			_setOriginalFacilityId = true;

			_originalFacilityId = _facilityId;
		}

		_facilityId = facilityId;
	}

	public long getOriginalFacilityId() {
		return _originalFacilityId;
	}

	@Override
	public long getLectureseriesId() {
		return _lectureseriesId;
	}

	@Override
	public void setLectureseriesId(long lectureseriesId) {
		_columnBitmask |= LECTURESERIESID_COLUMN_BITMASK;

		if (!_setOriginalLectureseriesId) {
			_setOriginalLectureseriesId = true;

			_originalLectureseriesId = _lectureseriesId;
		}

		_lectureseriesId = lectureseriesId;
	}

	public long getOriginalLectureseriesId() {
		return _originalLectureseriesId;
	}

	@Override
	public long getIsLinkFrom() {
		return _isLinkFrom;
	}

	@Override
	public void setIsLinkFrom(long isLinkFrom) {
		_isLinkFrom = isLinkFrom;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(0,
			LegacyLectureSeriesFacility.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public LegacyLectureSeriesFacility toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (LegacyLectureSeriesFacility)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		LegacyLectureSeriesFacilityImpl legacyLectureSeriesFacilityImpl = new LegacyLectureSeriesFacilityImpl();

		legacyLectureSeriesFacilityImpl.setLectureseriesFacilityId(getLectureseriesFacilityId());
		legacyLectureSeriesFacilityImpl.setFacilityId(getFacilityId());
		legacyLectureSeriesFacilityImpl.setLectureseriesId(getLectureseriesId());
		legacyLectureSeriesFacilityImpl.setIsLinkFrom(getIsLinkFrom());

		legacyLectureSeriesFacilityImpl.resetOriginalValues();

		return legacyLectureSeriesFacilityImpl;
	}

	@Override
	public int compareTo(
		LegacyLectureSeriesFacility legacyLectureSeriesFacility) {
		long primaryKey = legacyLectureSeriesFacility.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof LegacyLectureSeriesFacility)) {
			return false;
		}

		LegacyLectureSeriesFacility legacyLectureSeriesFacility = (LegacyLectureSeriesFacility)obj;

		long primaryKey = legacyLectureSeriesFacility.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
		LegacyLectureSeriesFacilityModelImpl legacyLectureSeriesFacilityModelImpl =
			this;

		legacyLectureSeriesFacilityModelImpl._originalFacilityId = legacyLectureSeriesFacilityModelImpl._facilityId;

		legacyLectureSeriesFacilityModelImpl._setOriginalFacilityId = false;

		legacyLectureSeriesFacilityModelImpl._originalLectureseriesId = legacyLectureSeriesFacilityModelImpl._lectureseriesId;

		legacyLectureSeriesFacilityModelImpl._setOriginalLectureseriesId = false;

		legacyLectureSeriesFacilityModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<LegacyLectureSeriesFacility> toCacheModel() {
		LegacyLectureSeriesFacilityCacheModel legacyLectureSeriesFacilityCacheModel =
			new LegacyLectureSeriesFacilityCacheModel();

		legacyLectureSeriesFacilityCacheModel.lectureseriesFacilityId = getLectureseriesFacilityId();

		legacyLectureSeriesFacilityCacheModel.facilityId = getFacilityId();

		legacyLectureSeriesFacilityCacheModel.lectureseriesId = getLectureseriesId();

		legacyLectureSeriesFacilityCacheModel.isLinkFrom = getIsLinkFrom();

		return legacyLectureSeriesFacilityCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(9);

		sb.append("{lectureseriesFacilityId=");
		sb.append(getLectureseriesFacilityId());
		sb.append(", facilityId=");
		sb.append(getFacilityId());
		sb.append(", lectureseriesId=");
		sb.append(getLectureseriesId());
		sb.append(", isLinkFrom=");
		sb.append(getIsLinkFrom());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(16);

		sb.append("<model><model-name>");
		sb.append(
			"de.uhh.l2g.plugins.migration.model.LegacyLectureSeriesFacility");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>lectureseriesFacilityId</column-name><column-value><![CDATA[");
		sb.append(getLectureseriesFacilityId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>facilityId</column-name><column-value><![CDATA[");
		sb.append(getFacilityId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>lectureseriesId</column-name><column-value><![CDATA[");
		sb.append(getLectureseriesId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>isLinkFrom</column-name><column-value><![CDATA[");
		sb.append(getIsLinkFrom());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = LegacyLectureSeriesFacility.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] {
			LegacyLectureSeriesFacility.class
		};
	private long _lectureseriesFacilityId;
	private long _facilityId;
	private long _originalFacilityId;
	private boolean _setOriginalFacilityId;
	private long _lectureseriesId;
	private long _originalLectureseriesId;
	private boolean _setOriginalLectureseriesId;
	private long _isLinkFrom;
	private long _columnBitmask;
	private LegacyLectureSeriesFacility _escapedModel;
}